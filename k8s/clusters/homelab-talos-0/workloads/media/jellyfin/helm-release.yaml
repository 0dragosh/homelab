---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: jellyfin
  namespace: media
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: jellyfin
      version: 9.4.2
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
  values:
    # initContainers:
    #   restore:
    #     image: busybox:latest
    #     imagePullPolicy: IfNotPresent
    #     env:
    #       - name: SRC_DIR
    #         value: /backup
    #       - name: DST_DIR
    #         value: /config
    #       - name: OVERWRITE
    #         value: "false"
    #     command:
    #       - /bin/sh
    #       - -c
    #       - |-
    #         if [ -z "$(ls -A $DST_DIR)" ]; then
    #           echo "Destination directory is empty, proceeding"
    #         elif [ $OVERWRITE == true ]; then
    #           echo "Overwriting data by wiping and restoring"
    #           rm -rf $DST_DIR/*
    #         else
    #           echo "Destination directory is not empty, not overwriting."
    #           echo "Aborting."
    #           exit 0
    #         fi

    #         echo "cleaning destination dir -- $DST_DIR ."
    #         latestFile="$(find $SRC_DIR -name "*.tar.gz" -print0 | xargs -r -0 ls -1 -t | head -1)"
    #         echo "latest backup file is: $latestFile ."
    #         echo extracting backup...
    #         tar -zxvf $latestFile -C $DST_DIR
    #         echo restore done
    #     volumeMounts:
    #       - name: restore
    #         mountPath: /backup
    #       - name: config
    #         mountPath: /config
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - plex
              topologyKey: kubernetes.io/hostname
    image:
      repository: jellyfin/jellyfin
      tag: 10.8.1
    env:
      TZ: "${TZ}"
      JELLYFIN_CACHE_DIR: "/config/cache"
    podSecurityContext:
      supplementalGroups:
        - 44
        - 109
        - 100
        - 568
    service:
      main:
        type: LoadBalancer
        loadBalancerIP: "${SVC_JELLYFIN_ADDR}"
        externalTrafficPolicy: Local
    ingress:
      main:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
          external-dns.alpha.kubernetes.io/target: "${SECRET_CLOUDFLARE_TUNNEL_ID_2}.cfargotunnel.com"
        hosts:
          - host: "jellyfin.${SECRET_DOMAIN_CASA}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - "jellyfin.${SECRET_DOMAIN_CASA}"
    persistence:
      config:
        enabled: true
        existingClaim: jellyfin-config-v1
      media:
        enabled: true
        existingClaim: media-nfs
        mountPath: /media
      transcode:
        enabled: true
        type: emptyDir
        medium: Memory
      restore:
        enabled: false
        type: custom
        volumeSpec:
          nfs:
            server: "${TRUENAS_VM_ADDRESS}"
            path: /mnt/tank/backups/softwarrself/jellyfin
        mountPath: /backup
        readOnly: false
    resources:
      requests:
        gpu.intel.com/i915: 1
        cpu: 100m
        memory: 500Mi
      limits:
        gpu.intel.com/i915: 1
        memory: 8192Mi
