---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: qbittorrent
  namespace: media
spec:
  interval: 5m
  install:
    disableWait: true
    remediation:
      retries: 100
  upgrade:
    remediation:
      retries: 100
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: qbittorrent
      version: 13.4.3
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
      interval: 5m
  values:
    initContainers:
      restore:
        image: busybox:latest
        imagePullPolicy: IfNotPresent
        env:
          - name: SRC_DIR
            value: /backup
          - name: DST_DIR
            value: /config
          - name: OVERWRITE      # will rm -rf before restoring so be careful
            value: "true"
          - name: JUST_SET_PERMS # in case you forgot and want to only do that. they get set after the restore anyway
            value: "false"
          - name: UID            # UID/GID to set after the restore
            value: "568"
          - name: GID
            value: "568"
        command:
          - /bin/sh
          - -c
          - |-
            if [ -z "$(ls -A $DST_DIR)" ]; then
              echo "Destination directory is empty, proceeding"
            elif [ $OVERWRITE == "true" ]; then
              echo "Overwriting data by wiping and restoring"
              rm -rf $DST_DIR/*
            elif [ $JUST_SET_PERMS == "true" ]; then
              echo Just setting permissions to $UID:$GID
              chown -R $UID:$GID $DST_DIR
              exit 0
            else
              echo "Destination directory is not empty, not overwriting."
              echo "Aborting."
              exit 0
            fi

            echo "cleaning destination dir -- $DST_DIR ."
            latestFile="$(find $SRC_DIR -name "*.tar.gz" -print0 | xargs -r -0 ls -1 -t | head -1)"
            echo "latest backup file is: $latestFile ."

            echo extracting backup...
            tar -zxvf $latestFile -C $DST_DIR
            echo restore done

            echo setting permissions to $UID:$GID
            chown -R $UID:$GID $DST_DIR
        volumeMounts:
          - name: restore
            mountPath: /backup
          - name: config
            mountPath: /config
    image:
      repository: ghcr.io/k8s-at-home/qbittorrent
      tag: v4.4.3.1
    env:
      TZ: "${TZ}"
    service:
      main:
        ports:
          http:
            port: 8080
      bittorrent:
        enabled: true
        type: LoadBalancer
        loadBalancerIP: "${SVC_QBITTORRENT_ADDR}"
        externalIPs:
          - "${SVC_QBITTORRENT_ADDR}"
        ports:
          bittorrent:
            enabled: true
            port: 50413
            protocol: TCP
            targetPort: 50413
        externalTrafficPolicy: Local
    ingress:
      main:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
          external-dns.alpha.kubernetes.io/target: "${SECRET_CLOUDFLARE_TUNNEL_ID_2}.cfargotunnel.com"
        hosts:
          - host: "qbittorrent.${SECRET_DOMAIN_CASA}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - "qbittorrent.${SECRET_DOMAIN_CASA}"
    metrics:
      enabled: true
      exporter:
        image:
          repository: ghcr.io/k8s-at-home/prometheus-qbittorrent-exporter
          tag: v1.2.0
      serviceMonitor:
        interval: 1m
        scrapeTimeout: 10s
      prometheusRule:
        enabled: true
    podSecurityContext:
      fsGroup: 568
    persistence:
      config:
        enabled: true
        existingClaim: qbittorrent-config-v1
      media:
        enabled: true
        existingClaim: media-nfs
        mountPath: /media
      restore:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: "${TRUENAS_VM_ADDRESS}"
            path: /mnt/tank/backups/softwarrself/qbittorrent
        mountPath: /backup
        readOnly: false
    resources:
      requests:
        memory: 250Mi
        cpu: 500m
      limits:
        memory: 6000Mi
