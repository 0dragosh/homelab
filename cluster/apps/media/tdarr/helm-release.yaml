---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: tdarr
  namespace: media
spec:
  interval: 5m
  install:
    disableWait: true
    remediation:
      retries: 100
  upgrade:
    remediation:
      retries: 100
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: tdarr
      version: 4.3.0
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
      interval: 5m
  values:
    image:
      repository: haveagitgat/tdarr
      tag: 2.00.13

    env:
      TZ: ${TZ}
      # -- Allow override for the pre-compiled tdarr ffmpeg binary
#      ffmpegPath: ""

    node:
      # -- Deploy a tdarr node.
      enabled: true
      # -- Node ID
      id: node
      image:
        repository: haveagitgat/tdarr_node
        tag: 2.00.13
        pullPolicy: IfNotPresent
      # -- Node resources
      resources: { }

      # -- Volume used for shared storage. e.g. emptydir transcode
      # @default -- See values.yaml
    ingress:
      main:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
          external-dns.alpha.kubernetes.io/target: "${SECRET_CLOUDFLARE_TUNNEL_ID_1}.cfargotunnel.com"
        hosts:
          - host: "tdarr.${SECRET_DOMAIN_CASA}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - "tdarr.${SECRET_DOMAIN_CASA}"
    podSecurityContext:
      fsGroup: 568
    persistence:
      config:
        enabled: true
        existingClaim: tdarr-config-v1
        mountPath: /app/configs
      data:
        enabled: true
        existingClaim: tdarr-data-v1
        mountPath: /app/server
      media:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: "${TRUENAS_ADDRESS}"
            path: /mnt/storage/media
        mountPath: /media
      shared:
        enabled: true
        mountpath: /shared
        type: emptyDir
        medium: Memory
      backup:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: "${TRUENAS_ADDRESS}"
            path: /mnt/nvme/backups/softwarrself/tdarr
        mountPath: /app/server/Tdarr/Backups
        readOnly: false
    resources:
      requests:
        memory: 250Mi
        cpu: 500m
        gpu.intel.com/i915: 1
      limits:
        memory: 32Gi
        gpu.intel.com/i915: 1
